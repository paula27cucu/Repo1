# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestcrearereducere():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testcrearereducere(self):
    # Test name: test_creare_reducere
    # Step # | name | target | value
    # 1 | open | /administration/index.php?controller=AdminDashboard&token=39c04b93229ba053cb3cdc120f38aa5f | 
    self.driver.get("http://34.118.122.203/administration/index.php?controller=AdminDashboard&token=39c04b93229ba053cb3cdc120f38aa5f")
    # 2 | setWindowSize | 1532x810 | 
    self.driver.set_window_size(1532, 810)
    # 3 | mouseOver | css=.col-xs-4:nth-child(4) | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".col-xs-4:nth-child(4)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 4 | mouseOut | css=.col-xs-4:nth-child(4) | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 5 | mouseOver | css=.col-xs-4:nth-child(6) | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".col-xs-4:nth-child(6)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 6 | mouseOut | css=.col-xs-4:nth-child(6) | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 7 | mouseOver | css=.col-xs-4:nth-child(7) | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".col-xs-4:nth-child(7)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 8 | mouseOut | css=.col-xs-4:nth-child(7) | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 9 | mouseOver | css=.col-xs-4:nth-child(5) | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".col-xs-4:nth-child(5)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 10 | mouseOut | css=.col-xs-4:nth-child(5) | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 11 | mouseOver | css=.col-xs-4:nth-child(4) | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".col-xs-4:nth-child(4)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 12 | mouseOut | css=.col-xs-4:nth-child(4) | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 13 | mouseOver | css=.col-xs-4:nth-child(3) | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".col-xs-4:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 14 | mouseOut | css=.col-xs-4:nth-child(3) | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 15 | click | css=#subtab-AdminCatalog > .link | 
    self.driver.find_element(By.CSS_SELECTOR, "#subtab-AdminCatalog > .link").click()
    # 16 | click | linkText=Reduceri | 
    self.driver.find_element(By.LINK_TEXT, "Reduceri").click()
    # 17 | mouseOver | css=.label-tooltip > .process-icon-new | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".label-tooltip > .process-icon-new")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 18 | click | css=.label-tooltip > .process-icon-new | 
    self.driver.find_element(By.CSS_SELECTOR, ".label-tooltip > .process-icon-new").click()
    # 19 | click | id=name_1 | 
    self.driver.find_element(By.ID, "name_1").click()
    # 20 | type | id=name_1 | NEW YEAR FEVER REDUCERE PROMOȚIONALĂ
    self.driver.find_element(By.ID, "name_1").send_keys("NEW YEAR FEVER REDUCERE PROMOȚIONALĂ")
    # 21 | click | name=description | 
    self.driver.find_element(By.NAME, "description").click()
    # 22 | type | name=description | 20% EXTRA PENTRU TOT pentru comenzile cu o valoare minimă de 147 lei
    self.driver.find_element(By.NAME, "description").send_keys("20% EXTRA PENTRU TOT pentru comenzile cu o valoare minimă de 147 lei")
    # 23 | click | id=code | 
    self.driver.find_element(By.ID, "code").click()
    # 24 | click | linkText=Genereaza | 
    self.driver.find_element(By.LINK_TEXT, "Genereaza").click()
    # 25 | click | id=partial_use_off | 
    self.driver.find_element(By.ID, "partial_use_off").click()
    # 26 | click | id=partial_use_on | 
    self.driver.find_element(By.ID, "partial_use_on").click()
    # 27 | click | id=highlight_on | 
    self.driver.find_element(By.ID, "highlight_on").click()
    # 28 | mouseOver | id=active_off | 
    element = self.driver.find_element(By.ID, "active_off")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 29 | click | id=partial_use_off | 
    self.driver.find_element(By.ID, "partial_use_off").click()
    # 30 | click | name=priority | 
    self.driver.find_element(By.NAME, "priority").click()
    # 31 | click | css=#desc-cart_rule-save-and-stay > span | 
    self.driver.find_element(By.CSS_SELECTOR, "#desc-cart_rule-save-and-stay > span").click()
    # 32 | mouseOver | css=#desc-cart_rule-save-and-stay > span | 
    element = self.driver.find_element(By.CSS_SELECTOR, "#desc-cart_rule-save-and-stay > span")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 33 | click | id=cart_rule_link_actions | 
    self.driver.find_element(By.ID, "cart_rule_link_actions").click()
    # 34 | click | id=apply_discount_percent | 
    self.driver.find_element(By.ID, "apply_discount_percent").click()
    # 35 | click | id=reduction_percent | 
    self.driver.find_element(By.ID, "reduction_percent").click()
    # 36 | type | id=reduction_percent | 20
    self.driver.find_element(By.ID, "reduction_percent").send_keys("20")
    # 37 | click | css=.col-lg-7 > .radio:nth-child(1) | 
    self.driver.find_element(By.CSS_SELECTOR, ".col-lg-7 > .radio:nth-child(1)").click()
    # 38 | click | id=desc-cart_rule-save | 
    self.driver.find_element(By.ID, "desc-cart_rule-save").click()
    # 39 | mouseOver | id=desc-cart_rule-save | 
    element = self.driver.find_element(By.ID, "desc-cart_rule-save")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 40 | mouseOut | id=desc-cart_rule-save | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    # 41 | click | id=subtab-AdminSpecificPriceRule | 
    self.driver.find_element(By.ID, "subtab-AdminSpecificPriceRule").click()
  
