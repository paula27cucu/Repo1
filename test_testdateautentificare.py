# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestTestdateautentificare():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_testdateautentificare(self):
    # Test name: test_date_autentificare
    # Step # | name | target | value
    # 1 | open | /ro/ | 
    self.driver.get("http://34.118.122.203/ro/")
    # 2 | setWindowSize | 1530x806 | 
    self.driver.set_window_size(1530, 806)
    # 3 | click | css=a > .hidden-sm-down | 
    self.driver.find_element(By.CSS_SELECTOR, "a > .hidden-sm-down").click()
    # 4 | click | linkText=Nu ai cont? Creeaza unul aici | 
    self.driver.find_element(By.LINK_TEXT, "Nu ai cont? Creeaza unul aici").click()
    # 5 | click | id=field-id_gender-2 | 
    self.driver.find_element(By.ID, "field-id_gender-2").click()
    # 6 | click | id=field-firstname | 
    self.driver.find_element(By.ID, "field-firstname").click()
    # 7 | type | id=field-firstname | Paula
    self.driver.find_element(By.ID, "field-firstname").send_keys("Paula")
    # 8 | click | id=field-lastname | 
    self.driver.find_element(By.ID, "field-lastname").click()
    # 9 | type | id=field-lastname | Cucu
    self.driver.find_element(By.ID, "field-lastname").send_keys("Cucu")
    # 10 | click | id=field-email | 
    self.driver.find_element(By.ID, "field-email").click()
    # 11 | type | id=field-email | paula.cucu@yahoo.ro
    self.driver.find_element(By.ID, "field-email").send_keys("paula.cucu@yahoo.ro")
    # 12 | type | id=field-password | 123456789
    self.driver.find_element(By.ID, "field-password").send_keys("123456789")
    # 13 | click | css=.input-group-btn > .btn | 
    self.driver.find_element(By.CSS_SELECTOR, ".input-group-btn > .btn").click()
    # 14 | click | id=field-birthday | 
    self.driver.find_element(By.ID, "field-birthday").click()
    # 15 | type | id=field-birthday | 06/27/1971
    self.driver.find_element(By.ID, "field-birthday").send_keys("06/27/1971")
    # 16 | type | id=field-birthday | 06/27/1981
    self.driver.find_element(By.ID, "field-birthday").send_keys("06/27/1981")
    # 17 | click | css=.form-group:nth-child(6) |
    time.sleep(5)
    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(6)").click()
    # 18 | click | css=.form-group:nth-child(8) | 
    self.driver.find_element(By.CSS_SELECTOR, ".form-group:nth-child(8)").click()
    # 19 | click | name=optin | 
    self.driver.find_element(By.NAME, "optin").click()
    # 20 | click | name=optin | 
    self.driver.find_element(By.NAME, "optin").click()
    # 21 | click | name=customer_privacy | 
    self.driver.find_element(By.NAME, "customer_privacy").click()
    # 22 | click | name=newsletter | 
    self.driver.find_element(By.NAME, "newsletter").click()
    # 23 | click | css=.input-wrapper > input | 
    self.driver.find_element(By.CSS_SELECTOR, ".input-wrapper > input").click()
    # 24 | type | css=.input-wrapper > input | paula.cucu@yahoo.ro
    self.driver.find_element(By.CSS_SELECTOR, ".input-wrapper > input").send_keys("paula.cucu@yahoo.ro")
    element = WebDriverWait(self.driver, 15).until(lambda d: d.find_element(By.CSS_SELECTOR, '.form-control-submit'))

    # 25 | click | css=.form-control-submit | 
    element.click()

    self.driver.find_element(By.CSS_SELECTOR, ".form-control-submit").click()
    assert 'Page not found' not in self.driver.page_source
    assert 'Parola' in self.driver.page_source

if __name__ == '__main__':
    pytest.main()
